#!/bin/bash
# Script de lancement principal pour la collecte ISBN

# Charger la configuration
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/config/settings.sh"

echo "=== SYSTÈME DE COLLECTE ISBN ==="
echo "================================"
echo ""
echo "Mode de collecte :"
echo "  1) Test avec 3 livres (16091, 16089, 16087)"
echo "  2) Collecter TOUS les livres sans données"
echo "  3) Collecter UN livre spécifique (par ID ou ISBN)"
echo ""
echo "Fiches et rapports :"
echo "  4) Créer des fiches complètes (martingale)"
echo "  5) Générer un rapport des données"
echo "  6) Afficher les données d'un livre"
echo ""
echo "Tests et maintenance :"
echo "  7) Tester toutes les APIs"
echo "  8) Tester Groq IA"
echo "  9) Nettoyer les doublons dans la base"
echo " 10) Effacer les données d'un livre"
echo ""
echo "  0) Quitter"
echo ""
read -p "Votre choix (0-10) : " choice

case $choice in
    1)
        echo ""
        echo "=== TEST AVEC 3 LIVRES ==="
        echo "Livres de test : 16091, 16089, 16087"
        echo ""
        
        # Créer une version temporaire qui ne traite que ces 3 livres
        cp collect_api_data.sh collect_test_3books.sh
        sed -i 's/# query="$query AND p.ID IN (16091, 16089, 16087)"/query="$query AND p.ID IN (16091, 16089, 16087)"/' collect_test_3books.sh
        
        # Option pour effacer d'abord les données existantes
        read -p "Effacer les données existantes de ces 3 livres ? (o/N) " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Oo]$ ]]; then
            echo "Suppression des données existantes..."
            mysql << EOF
DELETE FROM aipg_postmeta WHERE post_id IN (16091, 16089, 16087) AND meta_key LIKE 'api_%';
DELETE FROM aipg_postmeta WHERE post_id IN (16091, 16089, 16087) AND meta_key LIKE 'best_%';
DELETE FROM aipg_postmeta WHERE post_id IN (16091, 16089, 16087) AND meta_key LIKE 'calculated_%';
DELETE FROM aipg_postmeta WHERE post_id IN (16091, 16089, 16087) AND meta_key LIKE 'groq_%';
DELETE FROM aipg_postmeta WHERE post_id IN (16091, 16089, 16087) AND meta_key = 'last_api_update';
EOF
            echo "Données supprimées."
        fi
        
        echo ""
        echo "Lancement de la collecte pour 3 livres..."
        ./collect_test_3books.sh
        
        # Nettoyer
        rm -f collect_test_3books.sh
        ;;
        
    2)
        echo ""
        echo "=== COLLECTE DE TOUS LES LIVRES ==="
        read -p "Êtes-vous sûr de vouloir traiter TOUS les livres ? (o/N) " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Oo]$ ]]; then
            ./collect_api_data.sh
        else
            echo "Annulé."
        fi
        ;;
        
    3)
        echo ""
        echo "=== COLLECTE D'UN LIVRE SPÉCIFIQUE ==="
        echo "Vous pouvez entrer soit :"
        echo "  - L'ID du produit (ex: 16091)"
        echo "  - L'ISBN du livre (ex: 2857070063 ou 978-2857070061)"
        echo ""
        read -p "Entrez l'ID ou l'ISBN : " input
        
        # Nettoyer l'input (enlever les tirets)
        input=$(echo "$input" | tr -d '-')
        
        # Déterminer si c'est un ID ou un ISBN
        if [[ "$input" =~ ^[0-9]{1,6}$ ]]; then
            # C'est probablement un ID de produit
            product_id="$input"
            
            # Vérifier que le livre existe
            isbn=$(mysql -sN -e "
                SELECT meta_value FROM aipg_postmeta 
                WHERE post_id = $product_id AND meta_key = '_isbn' LIMIT 1;
            ")
            
            if [ -z "$isbn" ]; then
                echo "Aucun livre trouvé avec l'ID $product_id"
                exit 1
            fi
            
        elif [[ "$input" =~ ^[0-9]{10}$ ]] || [[ "$input" =~ ^[0-9]{13}$ ]]; then
            # C'est un ISBN
            isbn="$input"
            
            # Trouver l'ID du produit correspondant
            product_id=$(mysql -sN -e "
                SELECT post_id FROM aipg_postmeta 
                WHERE meta_key = '_isbn' AND meta_value = '$isbn' LIMIT 1;
            ")
            
            if [ -z "$product_id" ]; then
                echo "Aucun livre trouvé avec l'ISBN $isbn"
                exit 1
            fi
            
        else
            echo "Format invalide. Entrez un ID de produit ou un ISBN valide."
            exit 1
        fi
        
        echo ""
        echo "Livre trouvé :"
        echo "  - ID produit : #$product_id"
        echo "  - ISBN : $isbn"
        
        # Afficher le titre si disponible
        title=$(mysql -sN -e "
            SELECT post_title FROM aipg_posts WHERE ID = $product_id LIMIT 1;
        ")
        if [ ! -z "$title" ]; then
            echo "  - Titre : $title"
        fi
        
        echo ""
        
        # Option pour effacer d'abord
        read -p "Effacer les données existantes ? (o/N) " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Oo]$ ]]; then
            mysql << EOF
DELETE FROM aipg_postmeta WHERE post_id = $product_id AND meta_key LIKE 'api_%';
DELETE FROM aipg_postmeta WHERE post_id = $product_id AND meta_key LIKE 'best_%';
DELETE FROM aipg_postmeta WHERE post_id = $product_id AND meta_key LIKE 'calculated_%';
DELETE FROM aipg_postmeta WHERE post_id = $product_id AND meta_key LIKE 'groq_%';
DELETE FROM aipg_postmeta WHERE post_id = $product_id AND meta_key = 'last_api_update';
EOF
            echo "Données supprimées."
        fi
        
        # Créer une version temporaire pour ce livre
        cp collect_api_data.sh collect_single_book.sh
        sed -i "s/# query=\"\$query AND p.ID IN (16091, 16089, 16087)\"/query=\"\$query AND p.ID = $product_id\"/" collect_single_book.sh
        
        echo ""
        echo "Lancement de la collecte..."
        ./collect_single_book.sh
        rm -f collect_single_book.sh
        ;;
        
    4)
        echo ""
        echo "=== CRÉATION DE FICHES COMPLÈTES ==="
        ./martingale.sh
        ;;
        
    5)
        echo ""
        echo "=== GÉNÉRATION DU RAPPORT ==="
        ./generate_report.sh
        ;;
        
    6)
        echo ""
        echo "=== AFFICHER LES DONNÉES D'UN LIVRE ==="
        echo "Vous pouvez entrer soit :"
        echo "  - L'ID du produit (ex: 16091)"
        echo "  - L'ISBN du livre (ex: 2857070063 ou 978-2857070061)"
        echo ""
        read -p "Entrez l'ID ou l'ISBN : " input
        
        # Nettoyer l'input (enlever les tirets)
        input=$(echo "$input" | tr -d '-')
        
        # Déterminer si c'est un ID ou un ISBN
        if [[ "$input" =~ ^[0-9]{1,6}$ ]]; then
            # C'est probablement un ID de produit
            product_id="$input"
        elif [[ "$input" =~ ^[0-9]{10}$ ]] || [[ "$input" =~ ^[0-9]{13}$ ]]; then
            # C'est un ISBN - trouver l'ID correspondant
            product_id=$(mysql -sN -e "
                SELECT post_id FROM aipg_postmeta 
                WHERE meta_key = '_isbn' AND meta_value = '$input' LIMIT 1;
            ")
            
            if [ -z "$product_id" ]; then
                echo "Aucun livre trouvé avec l'ISBN $input"
                exit 1
            fi
        else
            echo "Format invalide"
            exit 1
        fi
        
        # Afficher toutes les données
        echo ""
        echo "Données pour le produit #$product_id :"
        echo "======================================"
        
        mysql -e "
            SELECT meta_key, LEFT(meta_value, 100) as value 
            FROM aipg_postmeta 
            WHERE post_id = $product_id 
            AND (meta_key LIKE 'api_%' OR meta_key LIKE 'best_%' OR meta_key LIKE 'calculated_%' OR meta_key LIKE 'groq_%' OR meta_key = '_isbn')
            ORDER BY meta_key;
        "
        ;;
        
    7)
        echo ""
        echo "=== TEST DES APIs ==="
        ./test_apis.sh
        ;;
        
    8)
        echo ""
        echo "=== TEST DE GROQ IA ==="
        ./test_groq.sh
        ;;
        
    9)
        echo ""
        echo "=== NETTOYAGE DES DOUBLONS ==="
        echo "Cette opération va supprimer tous les doublons dans la base de données."
        read -p "Continuer ? (o/N) " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Oo]$ ]]; then
            echo "Nettoyage en cours..."
            
            # Script SQL pour nettoyer les doublons
            mysql << 'EOF'
-- Créer une table temporaire avec les données uniques
CREATE TEMPORARY TABLE temp_unique AS
SELECT MIN(meta_id) as keep_id, post_id, meta_key, meta_value
FROM aipg_postmeta
WHERE meta_key LIKE 'api_%' OR meta_key LIKE 'best_%' OR meta_key LIKE 'calculated_%' OR meta_key LIKE 'groq_%'
GROUP BY post_id, meta_key, meta_value;

-- Supprimer tous les doublons sauf le premier
DELETE pm FROM aipg_postmeta pm
LEFT JOIN temp_unique tu ON pm.meta_id = tu.keep_id
WHERE pm.meta_key LIKE 'api_%' OR pm.meta_key LIKE 'best_%' OR pm.meta_key LIKE 'calculated_%' OR pm.meta_key LIKE 'groq_%'
AND tu.keep_id IS NULL;

-- Afficher le nombre de doublons supprimés
SELECT ROW_COUNT() as 'Doublons supprimés';
EOF
            echo "Nettoyage terminé !"
        fi
        ;;
        
    10)
        echo ""
        echo "=== EFFACER LES DONNÉES D'UN LIVRE ==="
        echo "Vous pouvez entrer soit :"
        echo "  - L'ID du produit (ex: 16091)"
        echo "  - L'ISBN du livre (ex: 2857070063 ou 978-2857070061)"
        echo ""
        read -p "Entrez l'ID ou l'ISBN : " input
        
        # Nettoyer l'input (enlever les tirets)
        input=$(echo "$input" | tr -d '-')
        
        # Déterminer si c'est un ID ou un ISBN
        if [[ "$input" =~ ^[0-9]{1,6}$ ]]; then
            product_id="$input"
        elif [[ "$input" =~ ^[0-9]{10}$ ]] || [[ "$input" =~ ^[0-9]{13}$ ]]; then
            # C'est un ISBN - trouver l'ID correspondant
            product_id=$(mysql -sN -e "
                SELECT post_id FROM aipg_postmeta 
                WHERE meta_key = '_isbn' AND meta_value = '$input' LIMIT 1;
            ")
            
            if [ -z "$product_id" ]; then
                echo "Aucun livre trouvé avec l'ISBN $input"
                exit 1
            fi
        else
            echo "Format invalide"
            exit 1
        fi
        
        echo "Cette opération va supprimer toutes les données API pour le produit #$product_id"
        read -p "Confirmer ? (o/N) " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Oo]$ ]]; then
            mysql << EOF
DELETE FROM aipg_postmeta 
WHERE post_id = $product_id 
AND (meta_key LIKE 'api_%' OR meta_key LIKE 'best_%' OR meta_key LIKE 'calculated_%' OR meta_key LIKE 'groq_%' OR meta_key = 'last_api_update');
EOF
            echo "Données supprimées pour le produit #$product_id"
        fi
        ;;
        
    0)
        echo "Au revoir !"
        exit 0
        ;;
        
    *)
        echo "Choix invalide"
        exit 1
        ;;
esac

echo ""
read -p "Appuyez sur Entrée pour continuer..."
